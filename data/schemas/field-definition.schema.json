{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://mutuelles.app/schemas/field-definition.schema.json",
  "title": "Field Definition Schema",
  "description": "Schema for platform field definitions (mapping between domain model and platform-specific fields)",
  "type": "object",
  "required": ["platform", "fields"],
  "additionalProperties": false,
  "properties": {
    "platform": {
      "type": "string",
      "minLength": 1,
      "pattern": "^[a-z][a-z0-9_]*$",
      "description": "Platform slug (lowercase, alphanumeric + underscores)",
      "examples": ["alptis", "swisslifeone"]
    },
    "fields": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/FieldDefinition"
      },
      "description": "Array of field definitions for this platform"
    },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of these field definitions"
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp (ISO 8601)"
        },
        "author": {
          "type": "string",
          "description": "Author or maintainer"
        }
      }
    }
  },
  "definitions": {
    "FieldDefinition": {
      "type": "object",
      "required": ["key", "type", "label"],
      "additionalProperties": false,
      "properties": {
        "key": {
          "type": "string",
          "minLength": 1,
          "description": "Platform-specific field key (can contain {i} for dynamic indexing)",
          "examples": ["login_username", "date_naissance_enfant_{i}"]
        },
        "domainKey": {
          "type": "string",
          "pattern": "^[a-zA-Z][a-zA-Z0-9.\\[\\]]*$",
          "description": "Domain model key (dot notation, e.g., 'subscriber.birthDate' or 'children[].birthDate')"
        },
        "type": {
          "type": "string",
          "enum": ["text", "password", "number", "date", "email", "tel", "select", "radio", "radio-group", "toggle", "checkbox", "button"],
          "description": "Field type"
        },
        "label": {
          "type": "string",
          "minLength": 1,
          "description": "Human-readable label"
        },
        "selector": {
          "type": "string",
          "minLength": 1,
          "description": "CSS selector to locate this field (can contain {i} for dynamic indexing)"
        },
        "required": {
          "type": "boolean",
          "description": "Is this field required?"
        },
        "defaultValue": {
          "description": "Default value for this field"
        },
        "options": {
          "description": "Options for select/radio fields",
          "oneOf": [
            {
              "$ref": "#/definitions/SelectOptionsWithItems"
            },
            {
              "$ref": "#/definitions/SelectOptionsWithTemplate"
            },
            {
              "$ref": "#/definitions/RadioGroupOptions"
            }
          ]
        },
        "metadata": {
          "type": "object",
          "description": "Additional metadata (e.g., dynamic indexing, toggle state)",
          "properties": {
            "dynamicIndex": {
              "$ref": "#/definitions/DynamicIndexMetadata"
            },
            "toggle": {
              "$ref": "#/definitions/ToggleMetadata"
            }
          },
          "additionalProperties": false
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "radio-group"
              }
            }
          },
          "then": {
            "required": ["options"]
          },
          "else": {
            "required": ["selector"]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "toggle"
              }
            }
          },
          "then": {
            "required": ["metadata"],
            "properties": {
              "metadata": {
                "required": ["toggle"]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "key": {
                "pattern": "\\{i\\}"
              }
            }
          },
          "then": {
            "required": ["metadata"],
            "properties": {
              "metadata": {
                "required": ["dynamicIndex"]
              }
            }
          }
        }
      ]
    },
    "SelectOptionsWithItems": {
      "type": "object",
      "required": ["open_selector", "items"],
      "additionalProperties": false,
      "properties": {
        "open_selector": {
          "type": "string",
          "description": "Selector to open the dropdown"
        },
        "items": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/SelectOptionItem"
          },
          "description": "Individual select options"
        }
      }
    },
    "SelectOptionsWithTemplate": {
      "type": "object",
      "required": ["open_selector", "option_selector_template"],
      "additionalProperties": false,
      "properties": {
        "open_selector": {
          "type": "string",
          "description": "Selector to open the dropdown"
        },
        "option_selector_template": {
          "type": "string",
          "description": "Template for option selector (with {{value}} placeholder)"
        }
      }
    },
    "SelectOptionItem": {
      "type": "object",
      "required": ["value", "label", "option_selector"],
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "string",
          "description": "Option value (internal)"
        },
        "label": {
          "type": "string",
          "description": "Option label (displayed)"
        },
        "option_selector": {
          "type": "string",
          "description": "CSS selector for this specific option"
        }
      }
    },
    "RadioGroupOptions": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/RadioOptionItem"
      }
    },
    "RadioOptionItem": {
      "type": "object",
      "required": ["value", "label", "selector"],
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "string",
          "description": "Radio value"
        },
        "label": {
          "type": "string",
          "description": "Radio label"
        },
        "selector": {
          "type": "string",
          "description": "CSS selector for this radio option"
        }
      }
    },
    "DynamicIndexMetadata": {
      "type": "object",
      "required": ["placeholder", "indexBase"],
      "additionalProperties": false,
      "properties": {
        "placeholder": {
          "type": "string",
          "enum": ["{i}"],
          "description": "Placeholder string to replace (e.g., '{i}')"
        },
        "indexBase": {
          "type": "integer",
          "enum": [0, 1],
          "description": "Starting index (0 or 1)"
        }
      }
    },
    "ToggleMetadata": {
      "type": "object",
      "required": ["click_selector", "state_on_selector"],
      "additionalProperties": false,
      "properties": {
        "click_selector": {
          "type": "string",
          "description": "Selector to click to toggle"
        },
        "state_on_selector": {
          "type": "string",
          "description": "Selector that exists when toggle is ON"
        }
      }
    }
  }
}
